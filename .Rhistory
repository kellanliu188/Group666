output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile()
scale_fill_gradient(low = "blue", high = "red") +  # Gradient fill based on the value
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal()  # Minimal theme
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
server = function(input, output) {
#######################################
####### BEGIN INPUT: Question 4 #######
#######################################
output$inst.info1 = renderInfoBox({
infoBox("Students total",
length(unique(quiz$STUDENT_KEY)),
icon = icon("list"), color = "purple")
})
output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal()  # Minimal theme
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
#######################################
####### BEGIN INPUT: Question 3 #######
#######################################
# Example of a tab (i.e. page)
instructor_dash = tabItem(
tabName = "instructor",
h2("Instructor Dashboard"),
# Dynamic infoBoxes
fluidRow(
infoBoxOutput("inst.info1"),
infoBoxOutput("inst.info2")
),
# Any visualization
fluidRow(
box(
title = "Performance Overview",
plotOutput("inst.plot1", height = 250)
),
box(
title = "Attendance Overview",
plotOutput("inst.plot2", height = 250)
),
box(
title = "Performance vs. Attendance",
plotOutput("inst.plot3", height = 250)
),
box(
title = "Temperature Overview",
plotOutput("inst.plot4", height = 250)
)
)
)
# Another empty tab
student_dash = tabItem(
tabName = "student",
h2("Student Dashboard")
)
#######################################
#######################################
#######################################
####### BEGIN INPUT             #######
#######################################
# include session trends for instructor dashboard
session_summary <- quiz %>%
group_by(YEAR, SESSION_NUMBER) %>%
summarise(
Avg_Attendance = mean(as.numeric(ATTENDED)),
Avg_Quiz_Score = mean(QUIZ_SCORE, na.rm = TRUE),
Avg_Participation_Rate = mean(TOTAL_COMPLETED_CLICKER/TOTAL_POSSIBLE_CLICKER, na.rm = TRUE),
Avg_Correct_Quiz_Clicker = mean(CORRECT_Q_CLICKER, na.rm = TRUE),
Avg_Temperature = mean(AVG_T_CLICKER, na.rm = TRUE)
)
#######################################
#######################################
server = function(input, output) {
#######################################
####### BEGIN INPUT: Question 4 #######
#######################################
output$inst.info1 = renderInfoBox({
infoBox("Students total",
length(unique(quiz$STUDENT_KEY)),
icon = icon("list"), color = "purple")
})
output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal()  # Minimal theme
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
server = function(input, output) {
#######################################
####### BEGIN INPUT: Question 4 #######
#######################################
output$inst.info1 = renderInfoBox({
infoBox("Students total",
length(unique(quiz$STUDENT_KEY)),
icon = icon("list"), color = "purple")
})
output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal() + # Minimal theme
scale_y_continuous(breaks = seq(from = min(session_summary$SESSION_NUMBER),
to = max(session_summary$SESSION_NUMBER), by = 1))
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
server = function(input, output) {
#######################################
####### BEGIN INPUT: Question 4 #######
#######################################
output$inst.info1 = renderInfoBox({
infoBox("Students total",
length(unique(quiz$STUDENT_KEY)),
icon = icon("list"), color = "purple")
})
output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal() + # Minimal theme
scale_y_continuous(breaks = seq(from = min(session_summary$SESSION_NUMBER),
to = max(session_summary$SESSION_NUMBER), by = 2))
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
server = function(input, output) {
#######################################
####### BEGIN INPUT: Question 4 #######
#######################################
output$inst.info1 = renderInfoBox({
infoBox("Students total",
length(unique(quiz$STUDENT_KEY)),
icon = icon("list"), color = "purple")
})
output$inst.info2 = renderInfoBox({
infoBox("Attendance",
paste0(round(100 * mean(quiz$ATTENDED)), "%"),
icon = icon("list"), color = "yellow")
})
output$inst.plot1 = renderPlot({
hist(quiz$QUIZ_SCORE)
})
output$inst.plot2 = renderPlot({
# I'm giving you three examples here
# only the last one will be displayed
# but you can try out each one.
# As you can see, using ggplot allows you to
# make much better-looking visualizations.
# simple
hist(quiz$TOTAL_COMPLETED_CLICKER)
# using ggplot
ggplot(quiz, aes(TOTAL_COMPLETED_CLICKER)) +
geom_histogram()
# using ggplot to make it clearer
ggplot(quiz, aes(x = TOTAL_COMPLETED_CLICKER)) +
geom_density(fill="gray") + # makes the density line and gray fill
labs(x = "Completed Clicker Questions", y = "Density") + # change axis labels
theme_classic() # to use white background
})
output$inst.plot3 = renderPlot({
ggplot(session_summary, aes(x = Avg_Attendance, y = Avg_Quiz_Score)) +
geom_line(group=1, colour="blue") +
geom_point(size=3, colour="red") +
labs(title = "Avg_Quiz_Score vs. Avg_Attendance", x = "Avg_Attendance", y = "Avg_Quiz_Score")
})
output$inst.plot4 = renderPlot({
ggplot(session_summary, aes(x = YEAR, y = SESSION_NUMBER, fill=Avg_Temperature)) +
geom_tile() +
scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
labs(title = "Heatmap of Avg_Temperature", x = "Year", y = "Session Number") +
theme_minimal() + # Minimal theme
scale_y_continuous(breaks = seq(from = min(session_summary$SESSION_NUMBER),
to = max(session_summary$SESSION_NUMBER), by = 2))
})
#######################################
#######################################
}
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
#######################################
### This code creates the dashboard ###
#######################################
# Here we set up the Header of the dashboard
dhead = dashboardHeader(title = "Clicker Dashboard")
# Here set up the sidebar which has links to two pages
dside = dashboardSidebar(
sidebarMenu(
menuItem("Instructor View", tabName = "instructor", icon = icon("dashboard")),
menuItem("Student View", tabName = "student", icon = icon("th"))
)
)
# Here we set up the body of the dashboard
dbody = dashboardBody(
tabItems(
student_dash,
instructor_dash
)
)
# Combining header, sidebar, and body
ui = dashboardPage(dhead, dside, dbody)
# Generating a local instance of your dashboard
shinyApp(ui, server)
